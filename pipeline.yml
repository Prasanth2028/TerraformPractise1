trigger:
  - main
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: GitHubPAT
# Local variables
  - name: TF_VERSION
    value: '1.7.5' # Specify the Terraform version
  - name: SPN
    value: 'ADO' # Azure service connection name
  - name: TF_WORKING_DIR
    value: '$(System.DefaultWorkingDirectory)' # Working directory for Terraform

stages:
  - stage: InitPlan
    displayName: 'Terraform Init and Plan'
    jobs:
      - job: TerraformPlan
        displayName: 'Terraform Init and Plan'
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '$(TF_VERSION)'
          - task: Bash@3
            displayName: 'Configure GitHub Token for Private Module Access'
            inputs:
              targetType: 'inline'
              script: |
                git config --global url."https://$(GITHUB_PAT)@github.com/".insteadOf "https://github.com/"
          - task: AzureCLI@2
            displayName: 'Azure CLI login (service connection)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Logged in to Azure via service connection"
          - task: AzureCLI@2
            displayName: 'Terraform Init (Azure CLI auth)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend-config=storage_account_name=saterraformstatefile001 -backend-config=container_name=tfstate -backend-config=key=terraform.tfstate -backend-config=use_azuread_auth=true
          - task: AzureCLI@2
            displayName: 'Terraform Plan (Azure CLI auth)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform plan -out=$(System.DefaultWorkingDirectory)/tfplan
          - task: PublishPipelineArtifact@1
            displayName: 'Publish Terraform Plan'
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/tfplan'
              artifact: 'terraform-plan'
              publishLocation: 'pipeline'

  - stage: Approval
    displayName: 'Manual Approval'
    dependsOn: InitPlan
    jobs:
      - deployment: WaitForApproval
        displayName: 'Approval Before Apply'
        environment: 'TerraformPratice'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo "Waiting for approval before proceeding to Terraform Apply"
                  displayName: 'Approval Step'

  - stage: Apply
    displayName: 'Apply Terraform Changes'
    dependsOn: Approval
    jobs:
      - job: TerraformApply
        displayName: 'Terraform Apply'
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'
          - task: Bash@3
            displayName: 'Configure GitHub Token for Private Module Access'
            inputs:
              targetType: 'inline'
              script: |
                git config --global url."https://$(GITHUB_PAT)@github.com/".insteadOf "https://github.com/"
          - task: AzureCLI@2
            displayName: 'Azure CLI login (service connection)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Logged in to Azure via service connection"
          - task: AzureCLI@2
            displayName: 'Terraform Init (Azure CLI auth)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend-config=storage_account_name=saterraformstatefile001 -backend-config=container_name=tfstate -backend-config=key=terraform.tfstate -backend-config=use_azuread_auth=true
          - task: AzureCLI@2
            displayName: 'Terraform Plan (Azure CLI auth)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform plan
          - task: AzureCLI@2
            displayName: 'Terraform Apply (Azure CLI auth)'
            inputs:
              azureSubscription: '$(SPN)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform apply -auto-approve


